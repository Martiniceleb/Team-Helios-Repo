{"version":3,"sources":["../../Finance_api/validation/register.js"],"names":["module","exports","validateRegisterInput","data","errors","alphabetRegex","name","email","password","password2","test","Validator","isLength","min","max","isEmail","isValid","Object","keys","length"],"mappings":";;;;AAAA;;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,qBAAT,CAA+BC,IAA/B,EAAqC;AACpD,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,aAAa,GAAG,cAAtB,CAFoD,CAGpD;;AACA,MAAMC,IAAI,GAAG,6BAAYH,IAAI,CAACG,IAAjB,CAAb;AACA,MAAMC,KAAK,GAAG,6BAAYJ,IAAI,CAACI,KAAjB,CAAd;AACA,MAAMC,QAAQ,GAAG,6BAAYL,IAAI,CAACK,QAAjB,CAAjB;AACA,MAAMC,SAAS,GAAG,6BAAYN,IAAI,CAACM,SAAjB,CAAlB,CAPoD,CASpD;;AACA,MAAI,CAACJ,aAAa,CAACK,IAAd,CAAmBJ,IAAnB,CAAL,EAA+B;AAC7BF,IAAAA,MAAM,CACHE,IADH,GACU,4BADV;AAED;;AACD,MAAI,CAACK,sBAAUC,QAAV,CAAmBN,IAAnB,EAAyB;AAAEO,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAAzB,CAAL,EAAoD;AAClDV,IAAAA,MAAM,CAACE,IAAP,GAAc,2CAAd;AACD,GAhBmD,CAiBpD;;;AACA,MAAI,CAACK,sBAAUI,OAAV,CAAkBR,KAAlB,CAAL,EAA+B;AAC7BH,IAAAA,MAAM,CAACG,KAAP,GAAe,kBAAf;AACD,GApBmD,CAqBpD;;;AACA,MAAI,CAACI,sBAAUC,QAAV,CAAmBJ,QAAnB,EAA6B;AAAEK,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAA7B,CAAL,EAAwD;AACtDV,IAAAA,MAAM,CAACI,QAAP,GAAkB,wCAAlB;AACD;;AACD,MAAIA,QAAQ,KAAKC,SAAjB,EAA4B;AAC1BL,IAAAA,MAAM,CAACK,SAAP,GAAmB,sBAAnB;AACD;;AAED,SAAO;AACLL,IAAAA,MAAM,EAANA,MADK;AAELY,IAAAA,OAAO,EAAEC,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,MAApB,KAA+B;AAFnC,GAAP;AAID,CAjCD","sourcesContent":["import Validator from 'validator';\nimport spaceTrimer from './spaceTrimer';\n\nmodule.exports = function validateRegisterInput(data) {\n  const errors = {};\n  const alphabetRegex = /^[A-Za-z ]+$/;\n  // Convert empty fields to an empty string so we can use validator functions\n  const name = spaceTrimer(data.name);\n  const email = spaceTrimer(data.email);\n  const password = spaceTrimer(data.password);\n  const password2 = spaceTrimer(data.password2);\n\n  // Name checks\n  if (!alphabetRegex.test(name)) {\n    errors\n      .name = 'Name should be an alphabet';\n  }\n  if (!Validator.isLength(name, { min: 4, max: 30 })) {\n    errors.name = 'Name should be at least 4 characters long';\n  }\n  // Email checks\n  if (!Validator.isEmail(email)) {\n    errors.email = 'Email is invalid';\n  }\n  // Password checks\n  if (!Validator.isLength(password, { min: 5, max: 30 })) {\n    errors.password = 'Password must be at least 5 characters';\n  }\n  if (password !== password2) {\n    errors.password2 = 'Passwords must match';\n  }\n\n  return {\n    errors,\n    isValid: Object.keys(errors).length === 0\n  };\n};\n"],"file":"register.js"}