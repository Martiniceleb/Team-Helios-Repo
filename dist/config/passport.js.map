{"version":3,"sources":["../../Finance_api/config/passport.js"],"names":["LocalStrategy","require","Strategy","FacebookStrategy","passport","serializeUser","user","done","id","deserializeUser","User","findById","err","use","usernameField","passwordField","email","password","findOne","message","comparePassword","isMatch","clientID","clientSecret","callbackURL","profileFields","accessToken","refreshToken","profile","process","nextTick","emails","value","payload","name","displayName","split","join","toLowerCase","newUser","save","module","exports"],"mappings":"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","sourcesContent":["import passport from 'passport';\nconst LocalStrategy = require('passport-local').Strategy;\nconst FacebookStrategy = require('passport-facebook'). Strategy;\nimport User from '../models/users';\n\n//Serialize user\npassport.serializeUser((user, done) => {\n  done(null, user.id)\n})\n\n//Deserialize user\npassport.deserializeUser((id, done) => { User.findById(id, (err, user) => { done(err, user) }) });\n\n//Local Strategy\npassport.use(new LocalStrategy({\n  usernameField: 'email',\n  passwordField: 'password',\n}, (email, password, done) => {\n  User.findOne({ email: email }, (err, user) => {\n      if (err) return done(err);\n      if (!user) return done(null, false, { message: 'Incorrect Username' });\n      user.comparePassword(password, (err, isMatch) => {\n          if (isMatch) {\n              return done(null, user);\n          } else {\n              return done(null, false, { message: 'Incorrect password.' });\n          }\n      })\n  })\n}))\n\npassport.use(new FacebookStrategy({\n  clientID: \"484024792328223\",\n  clientSecret: \"49a6b7fc5c4325791695fa7e81dc7986\",\n  callbackURL: \"/auth/facebook/callback\",\n  profileFields: ['id', 'displayName', 'photos', 'email'],\n}, function (accessToken, refreshToken, profile, done) {\n  process.nextTick(() => {\n      User.findOne({ email: profile.emails[0].value }, (err, user) => {\n          if (err)\n              return done(err);\n          if (user)\n              return done(null, user);\n          else {\n              let payload = {\n                  email: profile.emails[0].value,\n                  name: profile.displayName.split(\" \").join('-').toLowerCase(),\n              };\n              let newUser = new User(payload);\n              newUser.save((err, user) => {\n                  if (err)\n                      throw err;\n                  return done(null, newUser);\n              })\n          }\n      });\n  });\n}\n));\n\nmodule.exports = passport;"],"file":"passport.js"}